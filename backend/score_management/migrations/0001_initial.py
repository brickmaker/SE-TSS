# Generated by Django 2.0.3 on 2018-04-26 06:29

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(max_length=20, primary_key=True, serialize=False, unique=True, verbose_name='教工号/学号')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='电子邮件')),
                ('is_admin', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('user_type', models.PositiveSmallIntegerField(choices=[(1, '学生'), (2, '老师'), (3, '教务管理员'), (4, '系统管理员')], default=1)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('cid', models.CharField(max_length=100, primary_key=True, serialize=False, verbose_name='课程编号')),
                ('name', models.CharField(max_length=100, verbose_name='课程名')),
                ('credit', models.IntegerField(verbose_name='学分')),
                ('capacity', models.IntegerField(verbose_name='选课容量')),
                ('evaluation', models.TextField(null=True, verbose_name='考核方式')),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('name', models.CharField(max_length=100, primary_key=True, serialize=False, verbose_name='所在院系')),
            ],
        ),
        migrations.CreateModel(
            name='Take',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(null=True, verbose_name='分数')),
                ('test_date', models.DateField(auto_now=True, verbose_name='考试时间')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='score_management.Course')),
            ],
        ),
        migrations.CreateModel(
            name='People',
            fields=[
                ('username', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='score_management.Account')),
                ('date_created', models.TimeField(auto_now_add=True, verbose_name='保存日期')),
                ('date_modified', models.TimeField(auto_now=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='电子邮件')),
                ('name', models.CharField(max_length=20, null=True, verbose_name='姓名')),
                ('gender', models.CharField(choices=[('M', '男'), ('F', '女')], max_length=1, null=True, verbose_name='性别')),
            ],
        ),
        migrations.AddField(
            model_name='course',
            name='department',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='score_management.Department'),
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('people_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='score_management.People')),
            ],
            bases=('score_management.people',),
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('people_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='score_management.People')),
                ('title', models.CharField(blank=True, max_length=50, verbose_name='职称')),
                ('img', models.ImageField(blank=True, max_length=1048576, null=True, upload_to='profile', verbose_name='个人头像')),
            ],
            bases=('score_management.people',),
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('people_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='score_management.People')),
                ('img', models.ImageField(blank=True, max_length=1048576, null=True, upload_to='profile', verbose_name='个人头像')),
            ],
            bases=('score_management.people',),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('people_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='score_management.People')),
                ('img', models.ImageField(blank=True, max_length=1048576, null=True, upload_to='profile', verbose_name='个人头像')),
                ('grade', models.IntegerField(default=2015, verbose_name='入学年份')),
                ('major', models.CharField(max_length=100, verbose_name='专业')),
                ('class_name', models.CharField(max_length=100, verbose_name='所在班级')),
            ],
            bases=('score_management.people',),
        ),
        migrations.AddField(
            model_name='people',
            name='department',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='score_management.Department'),
        ),
        migrations.AddField(
            model_name='take',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='score_management.Student'),
        ),
        migrations.AddField(
            model_name='take',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='score_management.Faculty'),
        ),
        migrations.AddField(
            model_name='course',
            name='teacher',
            field=models.ManyToManyField(to='score_management.Faculty'),
        ),
    ]
